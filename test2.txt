
10月12号      JAVA第二节课

初见--string类     默认为null
字符串常量用“”表示
在JAVA中String类与任何其他类型做“+”操作，首先都会把其他数据类型转换为string后进行拼接操作。

转义字符‘\’
JAVA中的运算符
自增自减：（++；--）前置，后置

三目操作符
布尔表达式？表达式1：表达式2；（JAVAEE）

逻辑运算符（|     ||     &   &&）
|       逻辑或       多个表达式都需要判断
||      短路或       当多个条件有一个返回true,剩余条件不在判断

位运算符（|   &  ^  ~  >>   <<）
（按位或    按位与  异或   取反   右移（/2）  左移(*2)）

分支语句：
if...else
Switch...case
Switch中只能放字符，数值，枚举，String类
没有break语句，则会运行满足条件后的所有语句


Java中方法的定义与使用（直接在主方法中调用）
public static 方法返回值   方法名称（[参数类型  参数值 ...]）{
       方法体代码
    return    方法返回值;
}

void声明表示没有返回值，但可以与return 搭配使用结束程序
Java中方法的参数只能传值（值传递）

方法重载（）
定义：在同一个类中，方法名称相同，参数的个数或者类型不同（与参数顺序无关），与返回值无关！！！！

编码规范：重载的方法返回值（返回值类型）一定保持一致！！！！

JAVA中的数组-----一组相关类型变量的集合，可以通过统一方式来操作（引用数据类型）
1.数组动态初始化
数据类型[ ]  数组名称  =  new  数据类型[长度]
eg:  int[] data = new int[5];

a.数组元素访问通过索引完成，下标默认从0开始。如果索引下标超过数组的长度，会抛出数组越界异常（运行时异常）*******
b.动态初始化后的数组，每个元素都有其默认值。
c.查看数组长度      数组名称.length

for-each循环   （只限于读取数据，修改数组元素内容还是用之前的for循环）
for(int temp:data){
    System.out.print(temp+",");
}
相当于：
for(int i = 0;i<data.length;++i){
   System.out.print(data[i]+",");
} 

new 关键字    在堆上开辟空间

数组引用的传递
引用（相当于以及指针）：堆内存别名，一律占4个字节，在栈上分配空间，指向一块堆内存的地址
eg:int[ ] x = new int[5];
    int[ ] y = x;

2.数组静态初始化
简化格式（了解）
数据类型[ ]   数组名称 =  {值1，值2...}

完整格式（推荐）
数据类型[ ]  数据名称 =new 数据类型[ ]  {值1，值2...}

数组长度在数值定义后固定，不可变。

匿名数组......

数组最大缺陷：长度固定，越界访问



二维数组（开发几乎不用，应对笔试题，数据结构）
动态初始化
数据类型[ ] [ ]  数组名称 = new 数据类型[行个数][列个数]

静态初始化
数据类型 [ ] [ ]  数组名称 = new  数据类型[ ] [ ]

****数组的行 data.length    数组的列 data[行].length


数组与方法的互操作（本质：数组的引用传递）
1.方法接受数组
2.方法返回数组
3.方法修改数组

JAVA对数组的支持

1.排序  
java.util.Arrays.sort（数组名称）；（升序）
相当于：
import java.util.Arrays
Arrays.sort（数组名称）
支持八大基本数据结构，默认生序排序，内部采用双周轴快速排序

2.数组的部分拷贝
System.arraycopy（原数组名称，原数组开始点，目标数组名称，目标数组开始点，拷贝长度）；


3.数组全拷贝
java.util.Arrays.copyOf（原数组名称，新数组长度）；      返回值 : int[ ]   （新数组，修改其元素内容与原数组无关）
JAVA类集动态扩容就采用此方法

